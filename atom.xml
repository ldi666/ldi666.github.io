<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DiFi</title>
  
  
  <link href="http://win955.ml/atom.xml" rel="self"/>
  
  <link href="http://win955.ml/"/>
  <updated>2022-07-15T08:23:39.269Z</updated>
  <id>http://win955.ml/</id>
  
  <author>
    <name>di</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>content</title>
    <link href="http://win955.ml/pages/b9ff83/"/>
    <id>http://win955.ml/pages/b9ff83/</id>
    <published>2022-07-15T07:33:39.000Z</published>
    <updated>2022-07-15T08:23:39.269Z</updated>
    
    <content type="html"><![CDATA[<h1 id="示例文章：Google-搜索的即时自动补全功能究竟是如何“工作”的？"><a href="#示例文章：Google-搜索的即时自动补全功能究竟是如何“工作”的？" class="headerlink" title="示例文章：Google 搜索的即时自动补全功能究竟是如何“工作”的？"></a>示例文章：Google 搜索的即时自动补全功能究竟是如何“工作”的？</h1><blockquote><p>Google 搜索<strong>自动补全功能</strong>的强大，相信不少朋友都能感受到，它帮助我们更快地“补全”我们所要输入的搜索关键字。那么，它怎么知道我们要输入什么内容？它又是如何工作的？在这篇文章里，我们一起来看看。</p></blockquote><h2 id="使用自动补全"><a href="#使用自动补全" class="headerlink" title="使用自动补全"></a>使用自动补全</h2><p>Google 搜索的自动补全功能可以在 Google 搜索应用的大多数位置使用，包括 <a href="https://www.google.com/">Google</a> 主页、适用于 IOS 和 Android 的 Google 应用，我们只需要在 Google 搜索框上开始键入关键字，就可以看到联想词了。</p><p><img src="https://cdn.jsdelivr.net/gh/filess/img2@main/2022/03/26/1648303019705-c161ce00-d245-446a-b81c-42ec91474a40.gif"></p><p>在上图示例中，我们可以看到，输入关键字 <code>juej</code>，Google 搜索会联想到“掘金”、“掘金小册”、“绝句”等等，好处就是，我们无须输入完整的关键字即可轻松完成针对这些 topics 的搜索。</p><p>谷歌搜索的自动补全功能对于使用移动设备的用户来说特别有用，用户可以轻松在难以键入的小屏幕上完成搜索。当然，对于移动设备用户和台式机用户而言，这都节省了大量的时间。根据 Google 官方报告，自动补全功能可以减少大约 25% 的打字，累积起来，预计每天可以节省 200 多年的打字时间。是的，每天！</p><blockquote><p>注意，本文所提到的“<strong>联想词</strong>”与“<strong>预测</strong>”，是同一个意思。</p></blockquote><h2 id="基于“预测”而非“建议”"><a href="#基于“预测”而非“建议”" class="headerlink" title="基于“预测”而非“建议”"></a>基于“预测”而非“建议”</h2><p>Google 官方将自动补全功能称之为“预测”，而不是“建议”，为什么呢？其实是有充分理由的。自动补全功能是为了<strong>帮助用户完成他们打算进行的搜索</strong>，而不是建议用户要执行什么搜索。</p><p>那么，Google 是如何确定这些“预测”的？其实，Google 会根据趋势搜索 <a href="https://trends.google.com/trends/?geo=US">trends</a> 给到我们这些“预测”。简单来说，哪个热门、哪个搜索频率高，就更可能推给我们。当然，这也与我们当前所处的位置以及我们的搜索历史相关。</p><p>另外，这些“预测”也会随着我们键入的关键字的变更而更改。例如，当我们把键入的关键字从 <code>juej</code> 更改为 <code>juex</code> 时，与“掘金”相关的预测会“消失”，同时，与“觉醒”、“决心”相关联的词会出现。</p><p><img src="https://cdn.jsdelivr.net/gh/filess/img6@main/2022/03/26/1648303068169-386a99cb-143b-4ded-a859-1b7a4c4b5bd3.gif"></p><h2 id="为什么看不到某些联想词？"><a href="#为什么看不到某些联想词？" class="headerlink" title="为什么看不到某些联想词？"></a>为什么看不到某些联想词？</h2><p>如果我们在输入某个关键字时看不到联想词，那么表明 Google 的算法可能检测到：</p><ul><li>这个关键字不是热门字词；</li><li>搜索的字词太新了，我们可能需要等待几天或几周才能看到联想词；</li><li>这是一个侮辱性或敏感字词，这个搜索字词违反了 Google 的相关政策。更加详细的情况，可以了解 <a href="https://support.google.com/websearch/answer/7368877">Google 搜索自动补全政策</a>。</li></ul><h2 id="为什么会看到某些不当的联想词？"><a href="#为什么会看到某些不当的联想词？" class="headerlink" title="为什么会看到某些不当的联想词？"></a>为什么会看到某些不当的联想词？</h2><p>Google 拥有专门设计的系统，可以自动捕获不适当的预测结果而不显示出来。然而，Google 每天需要处理数十亿次搜索，这意味着 Google 每天会显示数十亿甚至上百亿条预测。再好的系统，也可能存在缺陷，不正确的预测也可能随时会出现。</p><p>我们作为 Google 搜索的用户，如果认定某条预测违反了相关的搜索自动补全政策，可以进行举报反馈，点击右下角“<strong>举报不当的联想查询</strong>”并勾选相关选项即可。</p><p><img src="https://cdn.jsdelivr.net/gh/filess/img3@main/2022/03/26/1648303098026-cac215dc-42c9-462a-a359-dcfb12ed3234.gif"></p><h2 id="如何实现自动补全算法？"><a href="#如何实现自动补全算法？" class="headerlink" title="如何实现自动补全算法？"></a>如何实现自动补全算法？</h2><p>目前，Google 官方似乎并没有公开搜索自动补全的算法实现，但是业界在这方面已经有了不少研究。</p><p>一个好的自动补全器必须是快速的，并且在用户键入下一个字符后立即更新联想词列表。<strong>自动补全器的核心是一个函数，它接受输入的前缀，并搜索以给定前缀开头的词汇或语句列表</strong>。通常来说，只需要返回少量的数目即可。</p><p>接下来，我们先从一个简单且低效的实现开始，并在此基础上逐步构建更高效的方法。</p><h3 id="词汇表实现"><a href="#词汇表实现" class="headerlink" title="词汇表实现"></a>词汇表实现</h3><p>一个<strong>简单粗暴的实现方式</strong>是：顺序查找词汇表，依次检查每个词汇，看它是否以给定的前缀开头。</p><p>但是，此方法需要将前缀与每个词汇进行匹配检查，若词汇量较少，这种方式可能勉强行得通。但是，如果词汇量规模较大，效率就太低了。</p><p>一个<strong>更好的实现方式是</strong>：让词汇按字典顺序排序。借助二分搜索算法，可以快速搜索有序词汇表中的前缀。由于二分搜索的每一步都会将搜索的范围减半，因此，总的搜索时间与词汇表中单词数量的对数成正比，即时间复杂度是 <code>O(log N)</code>。二分搜索的性能很好，但有没有更好的实现呢？当然有，往下看。</p><h3 id="前缀树实现"><a href="#前缀树实现" class="headerlink" title="前缀树实现"></a>前缀树实现</h3><p>通常来说，许多词汇都以相同的前缀开头，比如 <code>need</code>、<code>nested</code> 都以 <code>ne</code> 开头，<code>seed</code>、<code>speed</code> 都以 <code>s</code> 开头。要是为每个单词分别存储公共前缀似乎很浪费。</p><p><img src="https://cdn.jsdelivr.net/gh/filess/img5@main/2022/03/26/1648303128008-93cf798d-2662-4eec-8f80-2e07436aebfe.png"></p><p>前缀树是一种利用公共前缀来加速补全速度的数据结构。前缀树在节点树中排列一组单词，单词沿着从根节点到叶子节点的路径存储，树的层次对应于前缀的字母位置。</p><p>前缀的补全是顺着前缀定义的路径来查找的。例如，在上图的前缀树中，前缀 <code>ne</code> 对应于从子节点取左边缘 <code>N</code> 和唯一边缘 <code>E</code> 的路径。然后可以通过继续遍历从 <code>E</code> 节点可以达到的所有叶节点来生成补全列表。在图中，<code>ne</code> 的补全可以是两个分支：<code>-ed</code> 和 <code>-sted</code>。如果在数中找不到由前缀定义的路径，则说明词汇表中不包含以该前缀开头的单词。</p><h3 id="有限状态自动机-DFA-实现"><a href="#有限状态自动机-DFA-实现" class="headerlink" title="有限状态自动机(DFA)实现"></a>有限状态自动机(DFA)实现</h3><p>前缀树可以有效处理公共前缀，但是，对于其他共享词部分，仍会分别存储在每个分支中。比如，后缀 <code>ed</code>、<code>ing</code>、<code>tion</code> 在英文单词中特别常见。在上一个例子中，<code>e</code>、<code>d</code> 分别存放在了每一个分支上。</p><p>有没有一种方法可以更加节省存储空间呢？有的，那就是 DFA。</p><center><img src="https://cdn.jsdelivr.net/gh/filess/img4@main/2022/03/26/1648303158478-66a96e2d-6424-43d6-8cb3-2f7a39f960b8.gif" style="width: 50%;"></center><p>在上面的例子中，单词 <code>need</code>、<code>nested</code>、<code>seed</code> 和 <code>speed</code> 仅由 9 个节点组成，而上一张图中的前缀树包含了 17 个节点。</p><p>可以看出，最小化前缀树 DFA 可以在很大程度上减少数据结构的大小。即使词汇量很大，最小化 DFA 通常也适合在内存中存储，避免昂贵的磁盘访问是实现快速自动补全的关键。</p><h3 id="一些扩展"><a href="#一些扩展" class="headerlink" title="一些扩展"></a>一些扩展</h3><p>上面介绍了如何利用合理的数据结构实现基本的自动补全功能。这些数据结构可以通过多种方式进行扩展，从而改善用户体验。</p><p>通常，满足特定前缀的词汇可能很多，而用户界面上能够显示的却不多，我们更希望能显示最常搜索或者最有价值的词汇。这通常可以通过为词汇表中的每个单词增加一个代表单词值的<strong>权重</strong> <code>weight</code>，并且按照权重高低来排序自动补全列表。</p><ul><li>对于排序后的词汇表来说，在词汇表每个元素上增加 <code>weight</code> 属性并不难；</li><li>对于前缀树来说，将 <code>weight</code> 存储在叶子节点中，也是很简单的一个实现；</li><li>对于 <code>DFA</code> 来说，则较为复杂。因为一个叶子节点可以通过多条路径到达。一种解决方案是将权重关联到路径而不是叶子节点。</li></ul><p>目前有不少开源库都提供了这个功能，比如主流的搜索引擎框架 <a href="https://www.elastic.co/products/elasticsearch">Elasticsearch</a>、<a href="https://lucene.apache.org/solr/">Solr</a> 等，基于此，我们可以实现高效而强大的自动补全功能。</p><h4 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h4><ul><li><a href="https://mp.weixin.qq.com/s/RNKDCK2KoyeuMeEs6GUrow">阿里又一个 20k+ stars 开源项目诞生，恭喜 fastjson！</a></li><li><a href="https://mp.weixin.qq.com/s/rjGqxUvrEqJNlo09GrT1Dw">刷掉 90% 候选人的互联网大厂海量数据面试题（附题解 + 方法总结）</a></li><li><a href="https://mp.weixin.qq.com/s/kalGv5T8AZGxTnLHr2wDsA">好用！期待已久的文本块功能究竟如何在 Java 13 中发挥作用？</a></li><li><a href="https://mp.weixin.qq.com/s/_q812aGD1b9QvZ2WFI0Qgw">2019 GitHub 开源贡献排行榜新鲜出炉！微软谷歌领头，阿里跻身前 12！</a></li></ul><hr><p>欢迎关注我的公众号“<strong>Doocs</strong>”，原创技术文章第一时间推送。</p><center>    <img src="https://cdn.jsdelivr.net/gh/filess/img10@main/2022/03/26/1648303220922-7e14aefa-816e-44c1-8604-ade709ca1c69.png" style="width: 100px;"></center>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;示例文章：Google-搜索的即时自动补全功能究竟是如何“工作”的？&quot;&gt;&lt;a href=&quot;#示例文章：Google-搜索的即时自动补全功能究竟是如何“工作”的？&quot; class=&quot;headerlink&quot; title=&quot;示例文章：Google 搜索的即时自动补全功能究</summary>
      
    
    
    
    <category term="随笔" scheme="http://win955.ml/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>风景图片</title>
    <link href="http://win955.ml/2022/07/08/%E9%A3%8E%E6%99%AF%E5%9B%BE%E7%89%87/"/>
    <id>http://win955.ml/2022/07/08/%E9%A3%8E%E6%99%AF%E5%9B%BE%E7%89%87/</id>
    <published>2022-07-08T13:08:25.000Z</published>
    <updated>2022-07-11T10:57:04.650Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://t7.baidu.com/it/u=3734967019,941734598&fm=193&f=GIF"></p><br><p><img src="https://t7.baidu.com/it/u=2610975262,3538281461&fm=193&f=GIF"></p><br><p><img src="https://t7.baidu.com/it/u=2942499027,2479446682&fm=193&f=GIF"></p><br><p><img src="https://t7.baidu.com/it/u=2604797219,1573897854&fm=193&f=GIF"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://t7.baidu.com/it/u=3734967019,941734598&amp;fm=193&amp;f=GIF&quot;&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;&lt;img src=&quot;https://t7.baidu.com/it/u=2610975262,35382</summary>
      
    
    
    
    <category term="随笔" scheme="http://win955.ml/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://win955.ml/2022/07/08/test/"/>
    <id>http://win955.ml/2022/07/08/test/</id>
    <published>2022-07-08T10:11:04.000Z</published>
    <updated>2022-07-11T11:00:21.901Z</updated>
    
    <content type="html"><![CDATA[<center><span id="jinrishici-sentence">正在加载今日诗词....</span> <script src="https://sdk.jinrishici.com/v2/browser/jinrishici.js" charset="utf-8"></script></center>]]></content>
    
    
      
      
    <summary type="html">&lt;center&gt;&lt;span id=&quot;jinrishici-sentence&quot;&gt;正在加载今日诗词....&lt;/span&gt; &lt;script src=&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot; charset=&quot;utf-8&quot;</summary>
      
    
    
    
    <category term="测试" scheme="http://win955.ml/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="test" scheme="http://win955.ml/tags/test/"/>
    
  </entry>
  
</feed>
